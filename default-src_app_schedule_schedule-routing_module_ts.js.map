{"version":3,"file":"default-src_app_schedule_schedule-routing_module_ts.js","mappings":"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","sources":["./src/app/constants.ts","./src/app/schedule/schedule-function.component.ts","./src/app/schedule/schedule-function.component.html","./src/app/schedule/schedule-layout.component.ts","./src/app/schedule/schedule-layout.component.html","./src/app/schedule/schedule-list.component.html","./src/app/schedule/schedule-list.component.ts","./src/app/schedule/schedule-routing.module.ts","./src/app/schedule/schedule.component.ts","./src/app/schedule/schedule.component.html"],"sourcesContent":["export class Constants\r\n{\r\n    static readonly CLEANER_STR= 'Cleaner';\r\n};","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Account, Role } from '../_models';\r\nimport { UserFunction } from '../_models/userfunction';\r\nimport { AccountService, AlertService } from '../_services';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({ templateUrl: 'schedule-function.component.html' })\r\nexport class ScheduleFunctionComponent implements OnInit {\r\n  id: string;\r\n  account: Account;\r\n  form: FormGroup;\r\n  userFunctionIndexer: number = 0;\r\n\r\n  userFunctions: UserFunction[] = null;\r\n  functions: string[] = [];\r\n  submitted = false;\r\n  isLoggedAsAdmin: boolean = false;\r\n\r\n  isLoaded: boolean = false;\r\n  constructor(private accountService: AccountService,\r\n    private alertService: AlertService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n    this.isLoggedAsAdmin = this.accountService.isAdmin();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      function: ['', [Validators.required, this.functionValidator]],\r\n    });\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.accountService.getById(this.id)\r\n      .pipe(first())\r\n      .subscribe({\r\n          next: (account) => {\r\n            this.account = account;\r\n            this.isLoaded = true;\r\n            this.accountService.getRoles()\r\n            .pipe(first())\r\n            .subscribe({\r\n              next: (value: any) => {\r\n                this.functions = value;\r\n\r\n                this.userFunctions = account.userFunctions.slice();\r\n\r\n                console.log(this.account + this.id);\r\n                this.form.get('function').setValue(this.functions[0]);\r\n\r\n                this.userFunctionIndexer = account.userFunctions.length > 0 ? parseInt(account.userFunctions[account.userFunctions.length - 1].id) : 0;\r\n              },\r\n              error: error => {\r\n                this.alertService.error(error);\r\n              }\r\n            });\r\n        },\r\n        error: error => {\r\n          this.alertService.error(error);\r\n        }\r\n      });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  functionValidator(control: FormControl): { [s: string]: boolean } {\r\n    if (control.value === '') {\r\n      return { invalidFunction: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get isAdmin() {\r\n    return this.account.role == Role.Admin;\r\n  }\r\n}\r\n","<div class=\"mb-3 col\" *ngIf=\"isLoaded\">\r\n    <label>Duties of {{account.firstName}}</label>\r\n</div>\r\n<form [formGroup]=\"form\" class=\"card-body\">\r\n    <div class=\"border border-primary\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width:20%\">Duty</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"functions\">\r\n                <tr *ngFor=\"let s of userFunctions\">\r\n                    <td>{{s.userFunction}} </td>\r\n                </tr>\r\n                <tr *ngIf=\"!userFunctions\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <a routerLink=\"/schedule\" class=\"btn btn-link\">Back</a>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'schedule-layout.component.html' })\r\nexport class ScheduleLayoutComponent { }","<!-- <app-nav-schedule></app-nav-schedule> -->\r\n<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","\r\n<h1>User Properties</h1>\r\n<div class=\"mb-3 col\">\r\n    <label *ngIf=\"account\">Choose Property for {{account.firstName}}</label>\r\n</div>\r\n<table class=\"table table-striped\">\r\n    <tbody>\r\n        <tr >\r\n            <td style=\"white-space: nowrap\" *ngIf=\"account\">\r\n                <a routerLink=\"function/{{account.id}}\" class=\"btn btn-sm btn-primary mr-2\" >Duties</a>\r\n                &nbsp;\r\n                <a routerLink=\"schedules/{{account.id}}\" class=\"btn btn-sm btn-primary mr-2\">Schedules</a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n    <div class=\"mb-3\">\r\n        <a routerLink=\"/profile\" class=\"btn btn-link\">Back</a>\r\n    </div>\r\n\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../_services';\r\nimport { Account } from '../_models';\r\n\r\n@Component({ templateUrl: 'schedule-list.component.html' })\r\nexport class ScheduleListComponent implements OnInit {\r\n    //accounts: any[];\r\n    account = this.accountService.accountValue;\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        if (this.account) {\r\n            console.log(this.account.firstName);\r\n        } else {\r\n            console.log(\"account is NULL\");\r\n        }\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FunctionComponent } from '../admin/accounts/function.component';\r\nimport { SubNavComponent } from '../admin/subnav.component';\r\nimport { NavScheduleComponent } from './nav-schedule.component';\r\nimport { ScheduleFunctionComponent } from './schedule-function.component';\r\nimport { ScheduleLayoutComponent } from './schedule-layout.component';\r\nimport { ScheduleListComponent } from './schedule-list.component';\r\nimport { ScheduleComponent } from './schedule.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  //{ path: 'nav', component: ScheduleLayoutComponent },\r\n  {\r\n    path: '',  component:  ScheduleLayoutComponent , \r\n    children: [\r\n      { path: '', component: ScheduleListComponent },\r\n      { path: 'function/:id', component: ScheduleFunctionComponent },\r\n      { path: 'schedules/:id', component: ScheduleComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ScheduleRoutingModule { }\r\n","import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { CheckboxControlValueAccessor, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Account, Role } from '../_models';\r\nimport { Schedule } from '../_models/schedule';\r\nimport { SchedulePoolElement } from '../_models/schedulepoolelement';\r\nimport { UserFunction } from '../_models/userfunction';\r\nimport { AccountService, AlertService } from '../_services';\r\nimport { first } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TimeHandler } from '../_helpers/time.handler';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, MatSortable } from '@angular/material/sort';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { Constants } from '../constants';\r\n\r\nconst COLUMNS_SCHEMA = [\r\n  {\r\n    key: \"date\",\r\n    type: \"Date\",\r\n    label: \"DateTime\"\r\n  },\r\n  {\r\n    key: \"userFunction\",\r\n    type: \"text\",\r\n    label: \"Duty\"\r\n  },\r\n  {\r\n    key: \"scheduleGroup\",\r\n    type: \"text\",\r\n    label: \"Group\"\r\n  },\r\n  {\r\n    key: \"action\",\r\n    type: \"button\",\r\n    label: \"Action\"\r\n  },\r\n]\r\n\r\nconst VALID_TO_SERVICE_TIMEOUT = 1000 * 60 * 60 * 24; // 1 DAY\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.less']\r\n})\r\nexport class ScheduleComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('paginator') paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  readonly CLEANER_STR = Constants.CLEANER_STR;\r\n\r\n  form: FormGroup;\r\n  id: string;\r\n\r\n  schedules: Schedule[] = [];\r\n  scheduleIndexer: number = 0;\r\n  userFunctionIndexer: number = 0;\r\n  functions: string[] = [];\r\n  submitted = false;\r\n  accountService: AccountService;\r\n  account: Account;\r\n  isLoaded: boolean = false;\r\n  addingSchedule: boolean = false;\r\n  userFunctions: UserFunction[] = [];\r\n  isAdding: boolean = false;\r\n\r\n  isLoggedAsAdmin: boolean = false;\r\n\r\n  date: string = new Date().toISOString().slice(0, 16);\r\n\r\n  poolElements: SchedulePoolElement[] = [];\r\n  isAddScheduleMode: boolean = false;\r\n\r\n  dataSource: MatTableDataSource<Schedule>;\r\n  displayedColumns: string[] = COLUMNS_SCHEMA.map((col) => col.key);\r\n  columnsSchema: any = COLUMNS_SCHEMA;\r\n  public color: ThemePalette = 'primary';\r\n  connection: signalR.HubConnection;\r\n\r\n  constructor(accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n    this.accountService = accountService;\r\n\r\n    this.isLoggedAsAdmin = this.accountService.isAdmin();\r\n\r\n\r\n    var tempStr = environment.baseUrl;\r\n    /* const connection */this.connection = new signalR.HubConnectionBuilder()\r\n      .configureLogging(signalR.LogLevel.Information)\r\n      .withUrl(environment.baseUrl + '/update')\r\n      .build();\r\n\r\n    this.connection.start().then(function () {\r\n      console.log('SignalR Connected!');\r\n    }).catch(function (err) {\r\n      return console.error(err.toString());\r\n    });\r\n\r\n    this.connection.on(\"SendUpdate\", (id: number) => {\r\n      if (id != parseInt(this.id)) {\r\n        console.log(\"Error\");\r\n      }\r\n      /* TODO This used to cause a call to `GetById(int id)` with the id different then this.id \r\n      Currently I am testing if this is still a problem after fix has been applied*/\r\n      this.updateSchedulesAndPoolFromServer(); \r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Get the account for this id \r\n    this.accountService.getById(this.id)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (account) => {\r\n\r\n          this.accountService.getRoles()\r\n            .pipe(first())\r\n            .subscribe({\r\n              next: (value) => {\r\n                this.functions = value;\r\n\r\n                this.initSchedules(account);\r\n\r\n                // Initial sorting by date\r\n                this.sort.sort(({ id: 'date', start: 'asc' }) as MatSortable);\r\n\r\n                this.isLoaded = true;\r\n\r\n                this.userFunctions = account.userFunctions.slice();\r\n\r\n                this.account = account;\r\n                this.scheduleIndexer = account.schedules.length > 0 ? parseInt(account.schedules[account.schedules.length - 1].id) : 0;\r\n\r\n                this.userFunctionIndexer = account.userFunctions.length > 0 ? parseInt(account.userFunctions[account.userFunctions.length - 1].id) : 0;\r\n\r\n                var aDateValid = this.form.controls['availableSchedule4Function'].valid;\r\n                this.accountService.getAvailableSchedules(account.id)\r\n                  .pipe(first())\r\n                  .subscribe({\r\n                    next: (pollElements) => {\r\n                      this.poolElements = pollElements.schedulePoolElements;\r\n                      if (this.poolElements.length != 0) {\r\n                        this.form.get('availableSchedule4Function').setValue(this.getConcatPoolElement(this.poolElements[0]));\r\n                      }\r\n\r\n                    },\r\n                    error: error => {\r\n                      this.alertService.error(error);\r\n                    }\r\n                  });\r\n              },\r\n              error: (error: any) => {\r\n                this.alertService.error(error);\r\n              }\r\n            });\r\n\r\n        },\r\n        error: (error: any) => {\r\n          this.alertService.error(error);\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.account.subscribe(x => {\r\n      if (x != null) {\r\n        this.id = x.id;\r\n      }\r\n    });\r\n\r\n    this.isAddScheduleMode = this.isLoggedAsAdmin; // If not admin then we are adding available dates\r\n\r\n    this.form = this.formBuilder.group({\r\n      availableSchedule4Function: ['',],\r\n      allDates: [false, '',]\r\n    });\r\n  }\r\n\r\n  private getConcatPoolElement(poolElement: SchedulePoolElement): string {\r\n    if (this.poolElements[0].userFunction == this.CLEANER_STR) {\r\n      return this.getDisplayDate(poolElement.date) + \"/\" + poolElement.userFunction + \"/\" + poolElement.scheduleGroup;\r\n    } else {\r\n      return this.getDisplayDate(poolElement.date) + \"/\" + poolElement.userFunction;\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    console.log(\"Called\");\r\n  }\r\n  /* I am not sure if we need 'input' parameter - keep it for now*/\r\n  applyFilter(t: any, input: any) {\r\n    const target = t as HTMLTextAreaElement;\r\n    var filterValue = target.value;\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  onCheckboxChange(event: any) {\r\n    this.updateSchedulesAndPoolFromServer();\r\n  }\r\n\r\n  functionValidator(control: FormControl): { [s: string]: boolean } {\r\n    if (control.value === '') {\r\n      return { invalidFunction: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onAddAvailableSchedule() {\r\n\r\n    this.submitted = true;\r\n    this.addingSchedule = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    /* Test\r\n    var aDateValid = this.form.controls['availableSchedule4Function'].valid;\r\n    */\r\n\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    var schedule = this.createSchedule4DateAndFunction('availableSchedule4Function');\r\n    if (schedule == null) {\r\n      return;\r\n    }\r\n\r\n    this.isAdding = true;\r\n    this.accountService.GetScheduleFromPool(this.account.id, schedule)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (account) => {\r\n          this.addingSchedule = false;\r\n\r\n          console.log(account);\r\n          this.initSchedules(account);\r\n\r\n\r\n          if (this.poolElements.length != 0) {\r\n            this.form.get('availableSchedule4Function').setValue(this.getConcatPoolElement(this.poolElements[0]));\r\n          }\r\n          this.updateSchedulesAndPoolFromServer();\r\n        },\r\n        complete: () => {\r\n          this.isAdding = false;\r\n        },\r\n        error: error => {\r\n          this.addingSchedule = false;\r\n          this.alertService.error(error);\r\n          this.isAdding = false;\r\n          this.updateSchedulesAndPoolFromServer();\r\n        }\r\n      });\r\n  }\r\n\r\n  updateSchedulesAndPoolFromServer() {\r\n    this.accountService.getById(this.id)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (account) => {\r\n          this.initSchedules(account);\r\n\r\n          this.accountService.getAvailableSchedules(account.id)\r\n            .pipe(first())\r\n            .subscribe({\r\n              next: (pollElements) => {\r\n                console.log(\"Pool Elements:\" + pollElements);\r\n                this.poolElements = pollElements.schedulePoolElements;\r\n\r\n                if (this.poolElements.length != 0) {\r\n                  this.form.get('availableSchedule4Function').setValue(this.getConcatPoolElement(this.poolElements[0]));\r\n                }\r\n              },\r\n              error: error => {\r\n                this.alertService.error(error);\r\n              }\r\n            });\r\n        },\r\n        error: error => {\r\n          this.alertService.error(error);\r\n        }\r\n      });\r\n  }\r\n  createSchedule4DateAndFunction(dateFormControlName: string): Schedule {\r\n    var dateAndFuncStr = this.form.controls[dateFormControlName].value;\r\n    const array = dateAndFuncStr.split(\"/\");\r\n\r\n    var dateTimeStr = TimeHandler.displayStr2LocalIsoString(array[0]);\r\n    var formDate = Date.parse(dateTimeStr);\r\n    var formDateStr = array[0];\r\n    var formFunction = array[1];\r\n    var cleanerGroup = array[2];\r\n\r\n    var sDate = this.reverseScheduleLookup(formDateStr);\r\n\r\n    for (let index = 0; index < this.schedules.length; index++) {\r\n      var scheduleDate = new Date(this.schedules[index].date);\r\n      var scheduleTime = scheduleDate.getTime();\r\n      var scheduleFunction = this.schedules[index].userFunction;\r\n      if (scheduleTime == formDate && scheduleFunction == formFunction) {\r\n        this.alertService.warn(\"You are already \" + scheduleFunction + \" for that date/time\");\r\n        return null;\r\n      }\r\n    }\r\n\r\n    var localISOTime = TimeHandler.displayStr2LocalIsoString(formDateStr);\r\n\r\n    var schedule: Schedule = {\r\n      id: (++this.scheduleIndexer).toString(),\r\n      date: sDate/* localISOTime as any */,\r\n      newDate: sDate/* localISOTime as any */,\r\n      required: true,\r\n      deleting: false,\r\n      userAvailability: true,\r\n      scheduleGroup: cleanerGroup,\r\n      userFunction: formFunction,\r\n      newUserFunction: formFunction\r\n    }\r\n    return schedule;\r\n  }\r\n\r\n  reverseScheduleLookup(dateStr: string): Date {\r\n    for (let index = 0; index < this.poolElements.length; index++) {\r\n      const schedule = this.poolElements[index];\r\n      var dStr = this.getDisplayDate(schedule.date);\r\n      if (dStr == dateStr)\r\n        return schedule.date;\r\n    }\r\n    return null;\r\n  }\r\n  isScheduleFromPast(schedule: Schedule) {\r\n    var scheduleLocalDate = moment(moment.utc(schedule.date)).local().toDate(); // NEW CODE\r\n    var scheduleLocalDateMs = scheduleLocalDate.getTime(); // NEW CODE \r\n\r\n    var localNowMs = Date.now();\r\n    if ((scheduleLocalDateMs - localNowMs) < VALID_TO_SERVICE_TIMEOUT) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onDeleteSchedule(event: any, scheduleId: string, indx: string, schedule2Delete: Schedule) { // i is schedule index\r\n    schedule2Delete.deleting = true;\r\n    this.accountService.MoveSchedule2Pool(this.account.id, schedule2Delete)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (account) => {\r\n          this.updateSchedulesAndPoolFromServer();\r\n\r\n          this.schedules = account.schedules;\r\n          schedule2Delete.deleting = false;\r\n        },\r\n        error: error => {\r\n          this.alertService.error(error);\r\n          this.updateSchedulesAndPoolFromServer();\r\n          schedule2Delete.deleting = false;\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  onRowSelected(schedule: Schedule, tr: any) {\r\n  }\r\n\r\n  initSchedules(account: Account) {\r\n\r\n    var schedules: Schedule[] = [];\r\n\r\n    var dLocalNow = new Date();\r\n    var localNowMs = dLocalNow.getTime();\r\n    //  Filter out values that are older then now if checkbox this.f['allDates'].value is false\r\n    for (let index = 0; index < account.schedules.length; index++) {\r\n      const schedule = account.schedules[index];\r\n      var serverDate = schedule.date;\r\n      var serverDateStr = serverDate.toString();\r\n\r\n      var scheduleLocalDate = moment(moment.utc(schedule.date)).local().toDate(); // NEW CODE\r\n      var scheduleLocalDateMs = scheduleLocalDate.getTime(); // NEW CODE\r\n\r\n      // Check the schedule is at least 1 day before now\r\n      if (this.f['allDates'].value || (scheduleLocalDateMs - localNowMs) > VALID_TO_SERVICE_TIMEOUT) {\r\n        schedules.push(schedule);\r\n      }\r\n    }\r\n    this.schedules = schedules.slice();\r\n\r\n    this.dataSource = new MatTableDataSource(this.schedules);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n  }\r\n\r\n  getDisplayDate(date: Date): string {\r\n    return TimeHandler.getDateDisplayStrFromShortFormat(moment(moment.utc(date)).local().toDate());\r\n  }\r\n\r\n  get isAdmin() {\r\n    return this.account.role == Role.Admin;\r\n  }\r\n}\r\n","<div class=\"mb-3 col\" *ngIf=\"isLoaded\">\r\n    <label>Schedules for {{account.firstName}}</label>\r\n</div>\r\n<form [formGroup]=\"form\">\r\n    <fieldset>\r\n        <legend>Available Dates:</legend>\r\n        <div *ngIf=\"!isLoggedAsAdmin\">\r\n            <div class=\"col\">\r\n                <label>Date/Time</label>\r\n                <select #element formControlName=\"availableSchedule4Function\" class=\"form-select\">\r\n                    <option *ngFor=\"let item of poolElements\">\r\n                        <span *ngIf='item.userFunction === \"Cleaner\"' class=\"spinner-border spinner-border-sm mr-1\">\r\n                        {{ getDisplayDate(item.date) }}/{{ item.userFunction }}/{{ item.scheduleGroup }}\r\n                    </span>\r\n                        <span *ngIf='item.userFunction !=\"Cleaner\"' class=\"spinner-border spinner-border-sm mr-1\">\r\n                        {{ getDisplayDate(item.date) }}/{{ item.userFunction }}\r\n                    </span>\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <button type=\"button\" (click)=\"onAddAvailableSchedule()\" class=\"btn btn-primary\"\r\n            [ngClass]=\"{ 'disabled': !form.controls['availableSchedule4Function'].valid || poolElements.length <= 0 || isAdding}\">\r\n            <span *ngIf=\"isAdding\" class=\"spinner-border spinner-border-sm mr-1\"></span> Add\r\n        </button>\r\n    </fieldset>\r\n\r\n    <fieldset>\r\n        <legend>Assigned Dates:</legend>\r\n        <input type=\"checkbox\" (change)=\"onCheckboxChange($event)\" formControlName=\"allDates\" id=\"allDates\"\r\n            name=\"allDates\" value=\"\">\r\n        <label for=\"allDates\" class=\"ps-2\">All</label><br>\r\n    </fieldset>\r\n</form>\r\n\r\n<br>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"!account\">\r\n    <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n</div>\r\n\r\n<div class=\"color-sample mat-elevation-z3\" \r\n         [style.background-color]=\"color\">\r\n<div class=\"border\">\r\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"date\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Date/Time </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let schedule\">{{getDisplayDate(schedule.date)}}\r\n            </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"userFunction\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Duty </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let schedule\">{{schedule.userFunction}}\r\n            </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"scheduleGroup\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Team </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let schedule\">{{schedule.scheduleGroup}}\r\n            </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let i = index; let schedule; let row\">\r\n                <button class=\"btn btn-sm btn-danger btn-delete-account\" type=\"button\" (click)=\"onDeleteSchedule($event, row, i, schedule)\"\r\n                    [ngClass]=\"{ 'disabled': isScheduleFromPast(row) || row.deleting}\">\r\n                    <span *ngIf=\"row.deleting\" class=\"spinner-border spinner-border-sm mr-1\"></span> Delete\r\n                </button>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{hovered: row.hovered}\"\r\n            (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\" #tr (click)=\"onRowSelected(row, tr)\">\r\n        </mat-row>\r\n    </mat-table>\r\n\r\n    <mat-paginator #paginator [length]=\"schedules.length\" [pageSizeOptions]=\"[5, 10, 30, 50]\" showFirstLastButtons>\r\n    </mat-paginator>\r\n</div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <a routerLink=\"/schedule\" disabled=\"false\" class=\"btn btn-link\">Back</a>\r\n</div>\r\n<div class=\"row mt-3\"></div>"],"names":["Constants","Validators","Role","first","i0","ScheduleFunctionComponent","constructor","accountService","alertService","formBuilder","route","router","isLoggedAsAdmin","isAdmin","ngOnInit","form","group","function","required","functionValidator","id","snapshot","params","getById","pipe","subscribe","next","account","isLoaded","getRoles","value","functions","userFunctions","slice","console","log","get","setValue","userFunctionIndexer","length","parseInt","error","f","controls","control","invalidFunction","role","Admin","selectors","decls","vars","consts","template","ScheduleLayoutComponent","ScheduleListComponent","accountValue","firstName","RouterModule","ScheduleComponent","routes","path","component","children","ScheduleRoutingModule","forChild","imports","exports","ChangeDetectorRef","FormBuilder","FormControl","FormGroup","moment","environment","TimeHandler","MatTableDataSource","MatSort","signalR","COLUMNS_SCHEMA","key","type","label","VALID_TO_SERVICE_TIMEOUT","cdr","CLEANER_STR","Date","toISOString","map","col","tempStr","baseUrl","connection","HubConnectionBuilder","configureLogging","LogLevel","Information","withUrl","build","start","then","catch","err","toString","on","updateSchedulesAndPoolFromServer","ngAfterViewInit","initSchedules","sort","scheduleIndexer","schedules","aDateValid","valid","getAvailableSchedules","pollElements","poolElements","schedulePoolElements","getConcatPoolElement","x","isAddScheduleMode","availableSchedule4Function","allDates","poolElement","userFunction","getDisplayDate","date","scheduleGroup","ngOnDestroy","applyFilter","t","input","target","filterValue","trim","toLowerCase","dataSource","filter","onCheckboxChange","event","onAddAvailableSchedule","submitted","addingSchedule","clear","invalid","schedule","createSchedule4DateAndFunction","isAdding","GetScheduleFromPool","complete","dateFormControlName","dateAndFuncStr","array","split","dateTimeStr","displayStr2LocalIsoString","formDate","parse","formDateStr","formFunction","cleanerGroup","sDate","reverseScheduleLookup","index","scheduleDate","scheduleTime","getTime","scheduleFunction","warn","localISOTime","newDate","deleting","userAvailability","newUserFunction","dateStr","dStr","isScheduleFromPast","scheduleLocalDate","utc","local","toDate","scheduleLocalDateMs","localNowMs","now","onDeleteSchedule","scheduleId","indx","schedule2Delete","MoveSchedule2Pool","onRowSelected","tr","dLocalNow","serverDate","serverDateStr","push","paginator","getDateDisplayStrFromShortFormat","viewQuery","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}